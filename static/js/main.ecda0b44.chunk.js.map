{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","map","PostInfo","post","title","length","PostList","posts","id","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"o48IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,QCFGC,G,YAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKL,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGK,EAAQF,OAGV,OAED,mBACEH,UAAU,qBACVC,KAAI,iBAAYI,EAAQH,OAF1B,SAIGG,EAAQH,WAIb,qBAAKF,UAAU,oBAAf,SACGK,EAAQC,YChBFC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKR,UAAU,cAAf,SACGQ,EAASC,KAAI,SAAAJ,GAAO,OAAI,cAAC,EAAD,CAAaA,QAASA,UCDtCK,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKX,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,EAAKC,QAGR,8BACG,eAED,cAAC,EAAD,CAAUb,KAAMY,EAAKZ,aAIzB,mBAAGC,UAAU,iBAAb,SACGW,EAAKL,OAGNK,EAAKH,SAASK,OACZ,cAAC,EAAD,CAAaL,SAAUG,EAAKH,WAE5B,qCACE,uBACA,mBAAG,UAAQ,oBAAX,oCCxBGM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKf,UAAU,WAAf,SACGe,EAAMN,KAAI,SAAAE,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKK,UCWvD,IAAMD,EAAQE,EAAgBR,KAAI,SAAAE,GAAI,kCACjCA,GADiC,IAEpCZ,MAXmBmB,EAWDP,EAAKO,OAVhBC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKiB,KAAOE,MAC3C,MAULV,UAPsBa,EAOGV,EAAKK,GANvBM,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,QADjE,IAAwBA,EALHH,KAeRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUe,MAAOA,QCvBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecda0b44.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => <CommentInfo comment={comment} />)}\n  </div>\n);\n","import './PostInfo.scss';\n\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { CommentList } from '../CommentList/CommentList';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    {(post.comments.length)\n      ? <CommentList comments={post.comments} />\n      : (\n        <>\n          <hr />\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      )\n    }\n\n  </div>\n);\n","import './PostList.scss';\n\nimport { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => <PostInfo post={post} key={post.id} />)}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentList(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentList(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}